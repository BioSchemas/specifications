{
    "@context": {
        "schema": "http://schema.org/",
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "bioschemas": "http://discovery.biothings.io/view/bioschemas/"
    },
    "@graph": [
        {
            "@id": "bioschemas:ComputationalWorkflow",
            "@type": "rdfs:Class",
            "rdfs:comment": "Bioschemas specification for describing a computational workflow in the Life Sciences A computational workflow consists of an orchestrated and repeatable pattern of activity enabled by the systematic organization of resources into processes that transform materials, provide services, or process information (source Wikipedia.org). It is executed by a computational process and is thus distinct from laboratory or business workflows. Version: 0.5-DRAFT-2020_07_21",
            "schema:schemaVersion": [
                "https://bioschemas.org/profiles/ComputationalWorkflow/0.5-DRAFT-2020_07_21"
            ],
            "rdfs:label": "ComputationalWorkflow",
            "rdfs:subClassOf": {
                "@id": "schema:SoftwareSourceCode"
            },
            "$validation": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "alternateName": {
                        "description": " An alias for the item.",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    },
                    "citation": {
                        "description": " A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/creativework"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/creativework"
                                }
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    },
                    "conditionsOfAccess": {
                        "description": " Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an ArchiveComponent held by an ArchiveOrganization. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.\n\nFor example \"Available by appointment from the Reading Room\" or \"Accessible only from logged-in accounts \".",
                        "type": "string"
                    },
                    "contributor": {
                        "description": " A secondary contributor to the CreativeWork or Event.",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/organization"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/organization"
                                }
                            },
                            {
                                "$ref": "#/definitions/person"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/person"
                                }
                            }
                        ]
                    },
                    "creativeWorkStatus": {
                        "description": " The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/definedterm"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "creator": {
                        "description": " The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/organization"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/organization"
                                }
                            },
                            {
                                "$ref": "#/definitions/person"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/person"
                                }
                            }
                        ]
                    },
                    "dateCreated": {
                        "description": " The date on which the CreativeWork was created or the item was added to a DataFeed.",
                        "oneOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "$ref": "#/definitions/datetime"
                            }
                        ]
                    },
                    "dateModified": {
                        "description": " The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
                        "oneOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "$ref": "#/definitions/datetime"
                            }
                        ]
                    },
                    "datePublished": {
                        "description": " Date of first broadcast/publication.",
                        "type": "string",
                        "format": "date"
                    },
                    "description": {
                        "description": " A description of the item.",
                        "type": "string"
                    },
                    "encodingFormat": {
                        "description": "Should be the type of the workflow Media type typically expressed using a MIME format (see IANA siteand MDN reference) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).\n\nIn cases where a CreativeWork has several media type representations, encoding can be used to indicate each MediaObject alongside particular encodingFormat information.\n\nUnregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. Supersedes fileFormat.",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "string",
                                "format": "uri"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        ]
                    },
                    "funding": {
                        "description": " ",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/grant"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/grant"
                                }
                            }
                        ]
                    },
                    "hasPart": {
                        "description": " Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).\nInverse property: isPartOf.",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/creativework"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/creativework"
                                }
                            }
                        ]
                    },
                    "identifier": {
                        "description": " The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](http://schema.org/docs/datamodel.html#identifierBg) for more details.",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/propertyvalue"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/propertyvalue"
                                }
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "string",
                                "format": "uri"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        ]
                    },
                    "image": {
                        "description": " An image of the item. This can be a URL or a fully described ImageObject.",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/imageobject"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/imageobject"
                                }
                            },
                            {
                                "type": "string",
                                "format": "uri"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        ]
                    },
                    "input": {
                        "description": " an input required to use the workflow (eg. xl spreadsheet, xml file, ...)",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/formalparameter"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/formalparameter"
                                }
                            }
                        ]
                    },
                    "isBasedOn": {
                        "description": " A resource from which this work is derived or from which it is a modification or adaption. Supersedes isBasedOnUrl.",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/creativework"
                            },
                            {
                                "$ref": "#/definitions/product"
                            },
                            {
                                "type": "string",
                                "format": "uri"
                            }
                        ]
                    },
                    "keywords": {
                        "description": " Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
                        "type": "string"
                    },
                    "license": {
                        "description": " A license document that applies to this content, typically indicated by URL.",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/creativework"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/creativework"
                                }
                            },
                            {
                                "type": "string",
                                "format": "uri"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        ]
                    },
                    "maintainer": {
                        "description": " A maintainer of a Dataset, software package (SoftwareApplication), or other Project. A maintainer is a Person or Organization that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on \"upstream\" sources. When maintainer is applied to a specific version of something e.g. a particular version or packaging of a Dataset, it is always possible that the upstream source has a different maintainer. The isBasedOn property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/organization"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/organization"
                                }
                            },
                            {
                                "$ref": "#/definitions/person"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/person"
                                }
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item as input The name of the item.",
                        "type": "string"
                    },
                    "output": {
                        "description": " an output produced by the workflow",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/formalparameter"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/formalparameter"
                                }
                            }
                        ]
                    },
                    "producer": {
                        "description": " The person or organization who produced the workflow",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/organization"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/organization"
                                }
                            },
                            {
                                "$ref": "#/definitions/person"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/person"
                                }
                            }
                        ]
                    },
                    "programmingLanguage": {
                        "description": " The computer programming language.\n",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/computerlanguage"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/computerlanguage"
                                }
                            }
                        ]
                    },
                    "publisher": {
                        "description": "Where it came came from, e.g. Galaxy, github, or WF Hub if uploaded The publisher of the creative work.",
                        "anyOf": [
                            {
                                "$ref": "#/definitions/organization"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/organization"
                                }
                            },
                            {
                                "$ref": "#/definitions/person"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/person"
                                }
                            }
                        ]
                    },
                    "runtimePlatform": {
                        "description": " Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0). Supersedes runtime.",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ]
                    },
                    "sdPublisher": {
                        "description": "The party that publishes the structured data should normally be the host site. Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The sdPublisherproperty helps make such practices more explicit.",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/organization"
                            },
                            {
                                "$ref": "#/definitions/person"
                            }
                        ]
                    },
                    "softwareRequirements": {
                        "description": "Renaming schema.org/requirements as softwareRequirements Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime). Supersedes requirements.",
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "string",
                                "format": "uri"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        ]
                    },
                    "targetProduct": {
                        "description": " Target Operating System / Product to which the code applies. If applies to several versions, just the product name can be used.",
                        "oneOf": [
                            {
                                "$ref": "#/definitions/softwareapplication"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/softwareapplication"
                                }
                            }
                        ]
                    },
                    "url": {
                        "description": " URL of the item.",
                        "type": "string",
                        "format": "uri"
                    },
                    "version": {
                        "description": "version is a release, date modified may not warrant a release, but last date modified and access to all versions is important The version of the CreativeWork embodied by a specified resource.",
                        "oneOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "creator",
                    "dateCreated",
                    "input",
                    "license",
                    "name",
                    "output",
                    "programmingLanguage",
                    "sdPublisher",
                    "url",
                    "version"
                ],
                "recommended": [
                    "citation",
                    "contributor",
                    "creativeWorkStatus",
                    "description",
                    "funding",
                    "hasPart",
                    "isBasedOn",
                    "keywords",
                    "maintainer",
                    "producer",
                    "publisher",
                    "runtimePlatform",
                    "softwareRequirements",
                    "targetProduct"
                ],
                "optional": [
                    "alternateName",
                    "conditionsOfAccess",
                    "dateModified",
                    "datePublished",
                    "encodingFormat",
                    "identifier",
                    "image"
                ],
                "definitions": {
                    "creativework": {
                        "@type": "CreativeWork",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "identifier": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "required": []
                    },
                    "organization": {
                        "@type": "Organization",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "legalName": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "sameAs": {
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    "person": {
                        "@type": "Person",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string",
                                "format": "uri"
                            },
                            "mainEntityOfPage": {
                                "anyOf": [
                                    {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    },
                                    {
                                        "$ref": "#/definitions/creativework"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/definitions/creativework"
                                        }
                                    }
                                ]
                            }
                        },
                        "required": [
                            "name"
                        ]
                    },
                    "definedterm": {
                        "@type": "DefinedTerm",
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string",
                                "format": "uri"
                            },
                            "name": {
                                "type": "string"
                            },
                            "termCode": {
                                "type": "string"
                            },
                            "identifier": {
                                "type": "string"
                            },
                            "inDefinedTermSet": {
                                "$ref": "#/definitions/definedtermset"
                            }
                        },
                        "required": []
                    },
                    "definedtermset": {
                        "@type": "DefinedTermSet",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "identifier": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "required": []
                    },
                    "datetime": {
                        "@type": "schema:DateTime",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": []
                    },
                    "grant": {
                        "@type": "schema:Grant",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": []
                    },
                    "propertyvalue": {
                        "@type": "PropertyValue",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "boolean"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            },
                            "identifier": {
                                "type": "string"
                            },
                            "valuereference": {
                                "oneOf": [
                                    {
                                        "$ref": "#/definitions/categorycode"
                                    },
                                    {
                                        "type": "array",
                                        "items": [
                                            {
                                                "$ref": "#/definitions/categorycode"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "unitCode": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "string",
                                        "format": "uri"
                                    }
                                ]
                            },
                            "unitText": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "value"
                        ],
                        "recommended": [
                            "valueReference"
                        ],
                        "optional": [
                            "unitCode",
                            "unitText"
                        ]
                    },
                    "categorycode": {
                        "@type": "CategoryCode",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "codeValue": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "codeValue",
                            "url"
                        ]
                    },
                    "imageobject": {
                        "@type": "ImageObject",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "required": []
                    },
                    "formalparameter": {
                        "@type": "bioschemas:FormalParameter",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": []
                    },
                    "product": {
                        "@type": "schema:Product",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": []
                    },
                    "computerlanguage": {
                        "@type": "schema:ComputerLanguage",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": []
                    },
                    "softwareapplication": {
                        "@type": "schema:SoftwareApplication",
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "required": []
                    }
                }
            }
        },
        {
          "@id": "bioschemas:maintainer",
          "@type": "rdf:Property",
          "rdfs:comment": " maintainer of a Dataset, software package (SoftwareApplication), or other Project. A maintainer is a Person or Organization that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on \u201cupstream\u201d sources. When maintainer is applied to a specific version of something e.g. a particular version or packaging of a Dataset, it is always possible that the upstream source has a different maintainer. The isBasedOn property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.",
          "rdfs:label": "maintainer",
          "schema:domainIncludes": {
            "@id": "bioschemas:ComputationalWorkflow"
          },
          "schema:rangeIncludes": [
            {
              "@id": "schema:Person"
            },
            {
              "@id": "schema:Organization"
            }
          ]
        },
        {
          "@id": "bioschemas:softwareRequirements",
          "@type": "rdf:Property",
          "rdfs:comment": "Renaming schema.org/requirements as softwareRequirements. Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime). Supersedes requirements. ",
          "rdfs:label": "softwareRequirements",
          "schema:sameAs": {
            "@id": "schema:softwareRequirements"
          },
          "schema:domainIncludes": {
            "@id": "bioschemas:ComputationalWorkflow"
          },
          "schema:rangeIncludes": [
            {
              "@id": "schema:Text"
            },
            {
              "@id": "schema:URL"
            }
          ]
        },
        {
          "@id": "bioschemas:conditionsOfAccess",
          "@type": "rdf:Property",
          "rdfs:comment": "Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an ArchiveComponent held by an ArchiveOrganization. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.  For example \u201cAvailable by appointment from the Reading Room\u201d or \u201cAccessible only from logged-in accounts \u201c.",
          "rdfs:label": "conditionsOfAccess",
          "schema:domainIncludes": {
            "@id": "bioschemas:ComputationalWorkflow"
          },
          "schema:rangeIncludes": [
            {
              "@id": "schema:Text"
            }
          ]
        },
        {
          "@id": "bioschemas:funding",
          "@type": "rdf:Property",
          "rdfs:comment": "The funding for the workflow",
          "rdfs:label": "funding",
          "schema:sameAs": {
            "@id": "schema:funding"
          },
          "schema:domainIncludes": {
            "@id": "bioschemas:ComputationalWorkflow"
          },
          "schema:rangeIncludes": [
            {
              "@id": "schema:Grant"
            }
          ]
        },
        {
          "@id": "bioschemas:creativeWorkStatus",
          "@type": "rdf:Property",
          "rdfs:comment": "The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.",
          "rdfs:label": "creativeWorkStatus",
          "schema:domainIncludes": {
            "@id": "bioschemas:ComputationalWorkflow"
          },
          "schema:rangeIncludes": [
            {
              "@id": "schema:Text"
            },
            {
              "@id": "schema:DefinedTerm"
            }
          ]
        },
        {
            "@id": "bioschemas:input",
            "rdfs:comment": "an input required to use the workflow (eg. xl spreadsheet, xml file, ...) ",
            "@type": "rdf:Property",
            "rdfs:label": "input",
            "schema:domainIncludes": {
                "@id": "bioschemas:ComputationalWorkflow"
            },
            "schema:rangeIncludes": [
                {
                    "@id": "bioschemas:FormalParameter"
                }
            ]
        },
        {
            "@id": "bioschemas:output",
            "rdfs:comment": "an output produced by the workflow ",
            "@type": "rdf:Property",
            "rdfs:label": "output",
            "schema:domainIncludes": {
                "@id": "bioschemas:ComputationalWorkflow"
            },
            "schema:rangeIncludes": [
                {
                    "@id": "bioschemas:FormalParameter"
                }
            ]
        }
    ]
}